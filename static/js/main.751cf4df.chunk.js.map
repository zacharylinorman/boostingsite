{"version":3,"sources":["logo.svg","components/NavGroup.js","components/NavItem.js","components/Navbar.js","components/Title.js","components/ContentOptions.js","components/ConetntOptionsButton.js","components/FAQ.js","components/Content.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavGroup","state","styleExtra","justifyContent","this","props","side","marginLeft","marginRight","className","style","children","React","Component","NavItem","href","onClick","text","Navbar","Title","ContentOptions","ContentOptionsButton","FAQ","Content","title","contentOptions","clickSolo","bind","setState","prevState","titleClick","active","App","changeActive","goHome","event","console","log","target","innerHTML","name","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.751cf4df.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from \"react\";\r\n\r\nclass NavGroup extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n    render(){\r\n        let styleExtra = {\r\n            justifyContent: this.props.side == \"left\" ? \"flex-end\" : \"flex-start\",\r\n            marginLeft: this.props.side == \"left\" ? 0 : 175, //125\r\n            marginRight: this.props.side == \"left\" ? 175 : 0 \r\n        };\r\n\r\n        return (\r\n            <div className=\"nav-group\" style={styleExtra}>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default NavGroup;","import React from \"react\";\r\n\r\nclass NavItem extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <a href=\"#\" className = \"nav-item\" onClick={this.props.onClick}>\r\n                <div className = \"nav-item-shadow\"></div>\r\n                <div className=\"nav-button\">\r\n                    {this.props.text}\r\n                </div>\r\n            </a>\r\n        );\r\n\r\n    }\r\n}\r\n\r\nexport default NavItem;","import { render } from \"@testing-library/react\";\r\nimport React from \"react\";\r\n\r\nclass Navbar extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <nav className=\"navbar\">\r\n                {this.props.children}\r\n            </nav>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Navbar;","import React from \"react\";\r\n\r\nclass Title extends React.Component{\r\n\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <a href = \"#\" className = \"title\" onClick={this.props.onClick}>\r\n                <h1>DARKIN BOOSTING</h1>\r\n                <hr/>\r\n                <p>Quick. Easy. Reliable.</p>\r\n            </a>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Title;","import React from \"react\";\r\n\r\nclass ContentOptions extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className = \"content-options\">\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContentOptions;","import React from \"react\";\r\n\r\nclass ContentOptionsButton extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <a href=\"#\" className = \"content-options-button\" onClick = {this.props.onClick}>\r\n                <div className = \"content-options-button-shadow\"></div>\r\n                <div className=\"content-options-button-text\">\r\n                    {this.props.text}\r\n                </div>\r\n            </a>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default ContentOptionsButton;","import React from \"react\";\r\n\r\nclass FAQ extends React.Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {};\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            <div className = \"FAQ\">\r\n                <div></div>\r\n                Test\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default FAQ;","import React from \"react\";\r\nimport Title from \"./Title\";\r\nimport ContentOptions from \"./ContentOptions\";\r\nimport ContentOptionsButton from \"./ConetntOptionsButton\";\r\nimport FAQ from \"./FAQ\";\r\n\r\nclass Content extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            title: true,\r\n            contentOptions: true\r\n        };\r\n        this.clickSolo = this.clickSolo.bind(this);\r\n    }\r\n    clickSolo() {\r\n        this.setState(prevState => {\r\n            return {\r\n                title: !prevState.title\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let homeStyle = {\r\n            // height : this.state.title ? \"calc(100vh - var(--navbar-height))\" : 0 \r\n        };\r\n\r\n\r\n        return (\r\n            <main className=\"content\">\r\n                <div className=\"home\" style={homeStyle}>\r\n                    {this.state.title && <Title onClick={this.props.titleClick}/>}\r\n                    {this.props.active == \"home\" && this.state.contentOptions &&\r\n                        <ContentOptions>\r\n                            <ContentOptionsButton text=\"Flex\" />\r\n                            <ContentOptionsButton text=\"Solo\" onClick={this.clickSolo} />\r\n                            <ContentOptionsButton text=\"Placements\" />\r\n                        </ContentOptions>\r\n                    }\r\n\r\n                    {this.props.active == \"FAQ\" && <FAQ />}\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Content;","import React from 'react';\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport NavGroup from './components/NavGroup';\r\nimport NavItem from './components/NavItem';\r\nimport Navbar from './components/Navbar'\r\nimport Content from './components/Content'\r\nimport Title from './components/Title'\r\nimport ContentOptions from './components/ContentOptions';\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      active: \"home\"\r\n    };\r\n    \r\n    this.changeActive = this.changeActive.bind(this);\r\n    this.goHome = this.goHome.bind(this);\r\n  }\r\n\r\n  changeActive(event){\r\n    console.log(event.target.innerHTML);\r\n    let name = event.target.innerHTML;\r\n    this.setState(prevState => {\r\n      return {\r\n        active: name\r\n      };\r\n    });\r\n  }\r\n\r\n  goHome(){\r\n    this.setState(prevState => {\r\n      return {\r\n        active: \"home\"\r\n      };\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbar>\r\n          <NavGroup side=\"left\">\r\n            <NavItem text = \"FAQ\" onClick = {this.changeActive}/>\r\n            <NavItem text = \"Demo\" onClick = {this.changeActive}/>\r\n          </NavGroup>\r\n          <NavGroup side=\"right\">\r\n            <NavItem text = \"Contact\" onClick = {this.changeActive}/>\r\n            <NavItem text = \"Login\" onClick = {this.changeActive}/>\r\n          </NavGroup>\r\n        </Navbar>\r\n  \r\n        <Content active={this.state.active} titleClick = {this.goHome}/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}